----- Aufgabe 1 -----

http contains "password"

http.response.code >= 400

icmp

----- Aufgabe 2 -----

Traceroute schickt Pakete auf den Weg zum gewünschten Empfänger mit aufsteigender TTL. Knotenpunkte an denen die TTL des Paketes abgelaufen sind, melden dies dem Sender zurück, sodass dadurch die Informationen analysiert werden können. In der Aufgabe wird beispielsweise zunächst ein Paket mit einer TTL 1 (1 Hop) losgeschickt, diese endet bereits bei vwlanclients.uni-trier.de also dem ersten Knotenpunkt auf dem Weg nach Australien. Dieser Knotenpunkt meldet dies dem sendenden Rechner zurück und man kann die Informationen (Zeit, IP Adresse, ...) ablesen. Anschließend wird ein neues Paket mit TTL 2 (2 Hops) losgeschickt, am ersten Knotenpunkt ist die TTL noch nicht abgelaufen und das Paket wird weiter gesendet. Am nächsten Knotenpunkt ist dann die TTL wieder abgelaufen und es passiert die selbe Reaktion wie zuvor beim ersten Knotenpunkt. Dies wird so fortgesetzt. Außerdem kann es aber auch zu Zeitüberschreitungen kommen, indem die von traceroute festgelegte Wartezeit auf die Pakete überschritten wird. Ich konnte die angegebene Universität nicht erreichen, da ich nach 24 Hops immer Zeitüberschreitungen hatte. Auch das erhöhen der maximnalen Hops (default bei Windows: 30) hat keine Veränderung gebracht.
[Gedanke: Es könnten eventuell verschiedene Wege bei traceroute verfolgt werden, da Pakete nicht immer unbedingt auf den gleichen Wegen versendet werden, wenn Sender und Empfänger übereinstimmen. Dies könnte Ergebnisse verfälschen.]

----- Aufgabe 3 -----

Während der Scan der TCP Ports bereits nach 4.24 Sekunden abgeschlossen war, habe ich beim Scan der UDP Ports auch nach längerem Warten kein Ergebnis erhalten. Entweder ich habe nicht lange genug gewartet oder meine Firewall hat den Scan blockiert und ich konnte dies durch meine regeln nicht lösen. Trotzdem vermute ich, dass der Scan von UDP Ports deutlich länger dauert.
Ein Grund dafür sind die Unterschiede der Protokolle, da TCP eine Verbindung zum Empfänger aufbaut und damit über eine erfolgreiche Datenübertragung bescheid weiß, während UDP ein Paket einfach ein Paket losschickt und auf eine Antwort wartet. Dadurch können auch geschlossene Ports bei TCP schneller identifiziert werden als bei UDP, bei welchem nur durch Ablaufen der gesetzten maximalen Wartezeiten ein solcher Port identifiziert werden kann.
Um einen schnelleren Scan erreichen zu können bietet das Programm eine Parallelisierung des Scanvorgangs an, wodurch jedoch die Genauigkeit sinkt (bspw. Möglichkeit Rückmeldungen zu verpassen steigt). Außerdem können auch die zuvor genannten Wartezeiten verkürzt werden, wobei das selbe Problem wie zuvor auftreten kann.

